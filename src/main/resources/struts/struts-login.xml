<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts PUBLIC
    "-//Apache Software Foundation//DTD Struts Configuration 2.1//EN"
    "http://struts.apache.org/dtds/struts-2.1.dtd">

<struts>
	<!-- 定義一個處理登入的功能區塊 name="login" 給這個 package 一個名字，內部你可以定義好幾個 action namespace="/" 
		表示網址開頭的路徑（http://localhost:8080/【這邊】） extends="struts-default" 繼承 Struts 
		預設功能（表單驗證、轉向等等） -->
	<package name="login" namespace="/" extends="struts-default">

		<!-- 自定義攔截器堆疊 （ 攔截器就像「守門員」，在執行 Action 之前幫你處理一些事（例如驗證、資料注 modelDrivenStack 
			讓 Struts 能自動把表單資料塞進你自訂的 Java 類別（像 User） fileUpload 處理上傳檔案（雖然這個登入功能用不到，先準備好也無妨） -->
		<interceptors>
			<interceptor-stack name="loginStack">
				<!-- 提供 ModelDriven 支援，例如表單直接對應 POJO -->
				<interceptor-ref name="modelDrivenStack" />
				<!-- 處理檔案上傳（雖然登入用不到，可以預備） -->
				<interceptor-ref name="fileUpload" />
			</interceptor-stack>
		</interceptors>

		<!-- 設定預設使用的攔截器 這行是說：「我預設使用我剛剛定義的 loginStack 攔截器堆疊」 
		所以所有下面的 Action 都會自動套用這組設定，不用每次重複寫。 -->
		<default-interceptor-ref name="loginStack" />

		<!-- 當網址是 /login 時，就會觸發這個動作 class="com.example.action.LoginAction" 會執行這支 
			method="execute" 執行 LoginAction 裡的 execute() 方法 -->
		<action name="login" class="com.example.action.LoginAction"
			method="execute">
			<!-- 結果是成功，系統會自動幫你跳到 /product/product/list 那個頁面， 
			讓使用者直接看到商品清單。」 -->
			<result name="success" type="redirectAction">
				<param name="actionName">product/list</param>
				<param name="namespace">/product</param>
			</result>
			<result name="login">/login.jsp</result>
		</action>

	</package>
</struts>

<!-- 總整理 使用者瀏覽 http://localhost:8080/login → ↓ Struts2 找到 name="login" 的 
	action → ↓ 執行 LoginAction 的 execute() 方法 → ↓ 如果登入成功 → 回傳 "success" → 顯示 list.jsp 
	如果登入失敗 → 回傳 "login" → 顯示 login.jsp -->